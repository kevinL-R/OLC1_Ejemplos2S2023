package Analizadores;

import java_cup.runtime.*;

parser code {:

    public CalculadoraDePila calc = new CalculadoraDePila();
 //-----------------------------------------para errores sintacticos-------------------------------------------------------------------------------------------
    public void syntax_error(Symbol s)
    {
        System.err.println("Error en la Línea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "+s.value + " no reconocido. Se ha recuperado del error." );
         
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
        System.err.println("Error en la Línea " + (s.right+1)+ " Columna "+(s.left+1)+". Identificador " +s.value + " no reconocido.");
           
    }
:}

terminal  TOKEN_ADD, TOKEN_SUB, TOKEN_MULT, TOKEN_DIV, TOKEN_PUSH, TOKEN_PRINT;
terminal String TOKEN_NUMBER;

non terminal Inicio, Lista, Elemento;

Inicio ::= Lista{: System.out.println("ya salio :)"); :};

Lista ::= Lista Elemento  
        | Elemento ;

Elemento ::= TOKEN_ADD {: parser.calc.add(); :}
            | TOKEN_SUB {:parser.calc.sub(); :}
            | TOKEN_MULT {:parser.calc.mult();:}
            | TOKEN_DIV {: parser.calc.div();:}
            | TOKEN_PRINT{: parser.calc.print(); :}
            | TOKEN_PUSH TOKEN_NUMBER: n
                {:
                    Integer number = Integer.parseInt( n);
                      parser.calc.push( number);
                :};





